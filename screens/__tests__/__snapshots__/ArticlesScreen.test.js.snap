// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ArticlesScreen with List after 3s 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "padding": 10,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        style={
          Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "height": 40,
            "padding": 5,
            "width": "100%",
          }
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "padding": 5,
            "position": "absolute",
            "right": 0,
            "top": 10,
            "width": 50,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "gray",
                "fontSize": 32,
              },
              undefined,
              Object {
                "fontFamily": "ionicons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          ï’¥
        </Text>
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "lightgreen",
          "opacity": 1,
          "padding": 5,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "black",
            "fontSize": 17,
            "lineHeight": 24,
            "textAlign": "center",
          }
        }
      >
        Sort by: 
        newest
      </Text>
    </View>
  </View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;

exports[`should render initial ArticlesScreen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "marginBottom": 10,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "padding": 10,
        }
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        style={
          Object {
            "borderColor": "gray",
            "borderWidth": 1,
            "height": 40,
            "padding": 5,
            "width": "100%",
          }
        }
        value=""
      />
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
            "padding": 5,
            "position": "absolute",
            "right": 0,
            "top": 10,
            "width": 50,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
        />
      </View>
    </View>
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "lightgreen",
          "opacity": 1,
          "padding": 5,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "black",
            "fontSize": 17,
            "lineHeight": 24,
            "textAlign": "center",
          }
        }
      >
        Sort by: 
        newest
      </Text>
    </View>
  </View>
  <ActivityIndicator
    animating={true}
    color="#999999"
    hidesWhenStopped={true}
    size="large"
  />
</View>
`;
